name: Release
on:
  workflow_call:
    inputs:
      GO_VERSION:
        required: true
        type: string
      GO111MODULE:
        required: false
        type: string
      CGO_ENABLED:
        required: false
        type: number
        default: 1
      RELEASE:
        required: true
        type: string
      IS_DRAFT:
        required: false
        type: boolean
        default: false
      BUILD_PATH:
        required: false
        type: string
        default: "./..."
      UNIT_TESTS_PATH:
        required: false
        type: string
        default: "./..."
      # TEST_MULTI_ENVIRONMENTS:
      #   required: false
      #   type: boolean
      #   default: true
  push:
    tags:
      - '*'

jobs:
  test:
    uses: ./.github/workflows/go-basic-tests.yaml
    with:
      GO_VERSION: ${{ inputs.GO_VERSION }}
      GO111MODULE: ${{ inputs.GO111MODULE }}
      CGO_ENABLED: ${{ inputs.CGO_ENABLED }}
      UNIT_TESTS_PATH: ${{ inputs.UNIT_TESTS_PATH }}
      BUILD_PATH: ${{ inputs.BUILD_PATH }}
      # TEST_MULTI_ENVIRONMENTS: ${{ inputs.TEST_MULTI_ENVIRONMENTS }}
    secrets: inherit

  # release:
  #   needs: test
  #   env:
  #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Create Release
  #       uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e
  #       with:
  #         tag_name: ${{ steps.tag-calculator.outputs.NEW_TAG }}
  #         release_name: Release ${{ steps.tag-calculator.outputs.NEW_TAG }}
  #         draft: false
  #         prerelease: false

  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "Latest tag: $latest_tag"

      - name: Extract version
        id: extract_version
        run: |
          version=$(echo $latest_tag | jq -r 'sub("^[^0-9]*"; "")')
          echo "Version: $version"

      - name: Increase version
        id: increase_version
        run: |
          next_version=$((version + 1))
          echo "Next version: $next_version"

      - name: Set tag name
        id: set_tag_name
        run: |
          tag_name=v$next_version
          echo "::set-output name=tag_name::$tag_name"
        continue-on-error: true

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.set_tag_name.outputs.tag_name }}
          release_name: Release ${{ steps.set_tag_name.outputs.tag_name }}
          body: |
            Changes:
            - First change
            - Second change
          draft: false
          prerelease: false