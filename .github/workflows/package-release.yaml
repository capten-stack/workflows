name: Release
on:
  workflow_call:
    inputs:
      GO_VERSION:
        required: true
        type: string
      GO111MODULE:
        required: false
        type: string
      CGO_ENABLED:
        required: false
        type: number
        default: 1
      RELEASE:
        required: true
        type: string
      IS_DRAFT:
        required: false
        type: boolean
        default: false
      BUILD_PATH:
        required: false
        type: string
        default: "./..."
      UNIT_TESTS_PATH:
        required: false
        type: string
        default: "./..."
      # TEST_MULTI_ENVIRONMENTS:
      #   required: false
      #   type: boolean
      #   default: true
  push:
    tags:
      - 'v*.*.*'

jobs:
  test:
    uses: ./.github/workflows/go-basic-tests.yaml
    with:
      GO_VERSION: ${{ inputs.GO_VERSION }}
      GO111MODULE: ${{ inputs.GO111MODULE }}
      CGO_ENABLED: ${{ inputs.CGO_ENABLED }}
      UNIT_TESTS_PATH: ${{ inputs.UNIT_TESTS_PATH }}
      BUILD_PATH: ${{ inputs.BUILD_PATH }}
      # TEST_MULTI_ENVIRONMENTS: ${{ inputs.TEST_MULTI_ENVIRONMENTS }}
    secrets: inherit

  # release:
  #   needs: test
  #   env:
  #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Create Release
  #       uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e
  #       with:
  #         tag_name: ${{ steps.tag-calculator.outputs.NEW_TAG }}
  #         release_name: Release ${{ steps.tag-calculator.outputs.NEW_TAG }}
  #         draft: false
  #         prerelease: false

  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: Install dependencies
        run: npm install

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes:
            - First change
            - Second change
          draft: false
          prerelease: false

      - name: Get the release ID
        run: echo "Release ID - ${{ steps.create_release.outputs.id }}"